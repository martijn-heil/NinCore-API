<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>me.ninjoh</groupId>
    <artifactId>nincore-api</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <local.maven.repository>${user.home}/.m2/</local.maven.repository>
    </properties>

    <repositories>

    <!--
        <repository>
            <id>local-repo</id>
            <url>${local.maven.repository}</url>
        </repository>
    -->
        
        <repository>
            <id>nincore-api-repo</id>
            <url>https://raw.github.com/martijn-heil/NinCore-API/mvn-repo/</url>
        </repository>

        <repository>
            <id>spigot-repo</id>
            <url>https://hub.spigotmc.org/nexus/content/repositories/snapshots/</url>
        </repository>

    </repositories>
    
    <url>https://github.com/martijn-heil/NinCore-API</url>


    <dependencies>

        <!--Spigot API-->
        <dependency>
            <groupId>org.spigotmc</groupId>
            <artifactId>spigot-api</artifactId>
            <version>1.9-R0.1-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>

        <!--Bukkit API-->
        <dependency>
            <groupId>org.bukkit</groupId>
            <artifactId>bukkit</artifactId>
            <version>1.9-R0.1-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>

        <!-- CraftBukkit & NMS -->
        <dependency>
        <groupId>org.spigotmc</groupId>
        <artifactId>spigot</artifactId>
        <version>1.9-R0.1-SNAPSHOT</version>
        <scope>provided</scope>
        </dependency>

        <!-- Joda Time-->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.9.2</version>
            <scope>compile</scope>
        </dependency>

        <!-- Jbcrypt -->
        <!--<dependency>-->
            <!--<groupId>org.mindrot</groupId>-->
            <!--<artifactId>jbcrypt</artifactId>-->
            <!--<version>0.3m</version>-->
            <!--<scope>provided</scope>-->
        <!--</dependency>-->

        <!--<dependency>-->
            <!--<groupId>me.ninjoh</groupId>-->
            <!--<artifactId>nincore</artifactId>-->
            <!--<version>2.0.0</version>-->
            <!--<scope>provided</scope>-->
        <!--</dependency>-->

        <!-- Jbcrypt -->
        <dependency>
            <groupId>org.mindrot</groupId>
            <artifactId>jbcrypt</artifactId>
            <version>0.3m</version>
            <scope>compile</scope>
        </dependency>

        <!-- Jetbrains annotations -->
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations-java5</artifactId>
            <version>15.0</version>
            <scope>compile</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.1</version>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!--<minimizeJar>true</minimizeJar>-->
                    <artifactSet>

                        <includes>
                            <include>joda-time:joda-time</include>
                            <include>org.jetbrains:annotations-java5</include>
                            <include>me.ninjoh.nincore.api</include>
                        </includes>

                    </artifactSet>
                    <relocations>

                        <relocation>
                            <pattern>org.joda</pattern>
                            <shadedPattern>me.ninjoh.nincore.api.common.org.joda</shadedPattern>
                        </relocation>

                        <relocation>
                            <pattern>org.jetbrains.annotations</pattern>
                            <shadedPattern>me.ninjoh.nincore.api.common.org.jetbrains.annotations</shadedPattern>
                        </relocation>

                        <relocation>
                            <pattern>org.mindrot</pattern>
                            <shadedPattern>me.ninjoh.nincore.api.common.org.mindrot</shadedPattern>
                        </relocation>

                    </relocations>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/license/**</exclude>
                                <exclude>META-INF/*</exclude>
                                <exclude>META-INF/maven/**</exclude>
                                <exclude>LICENSE</exclude>
                                <exclude>NOTICE</exclude>
                                <exclude>/*.md</exclude>
                                <exclude>/.gitignore</exclude>
                                <exclude>/*.txt</exclude>
                                <exclude>build.properties</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9.1</version>
                <configuration>
                    <aggregate>true</aggregate>
                    <show>public</show>
                    <nohelp>true</nohelp>
                    <header>NinCore API, ${project.version}</header>
                    <footer>NinCore API, ${project.version}</footer>
                    <doctitle>NinCore API, ${project.version}</doctitle>
                    <links>
                        <link>http://static.springsource.org/spring/docs/3.0.x/javadoc-api/</link>
                    </links>
                </configuration>
                
                <executions>
                  <execution>
                    <id>generate-javadocs</id>
                    <goals>
                      <goal>javadoc</goal>
                    </goals>
                    <phase>package</phase>
                  </execution>
                </executions>
            </plugin>
            
            <plugin>
                <!-- Deploy the javadocs -->
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.12</version>
                <executions>

                    <!-- Deploy the javadocs -->
                    <execution>
                        <id>deploy-javadocs</id>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <!-- select the Maven phase in which the plugin will be executed -->
                        <phase>deploy</phase>


                        <configuration>
                            <!-- Plugin configuration goes here -->

                            <server>github</server>

                            <!-- The commit message -->
                            <message>Update javadocs for version ${project.version}</message>
                            <!-- The location where the site is uploaded -->
                            <path>javadocs/${project.version}</path>
                            <!-- Use merge or override the content -->
                            <merge>true</merge>
                        </configuration>
                    </execution>

                    <!-- Update the latest javadocs -->
                    <execution>
                        <id>deploy-latest-javadocs</id>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <!-- select the Maven phase in which the plugin will be executed -->
                        <phase>deploy</phase>


                        <configuration>
                            <!-- Plugin configuration goes here -->

                            <server>github</server>

                            <!-- The commit message -->
                            <message>Update latest javadocs</message>
                            <!-- The location where the site is uploaded -->
                            <path>javadocs/latest</path>
                            <!-- Use merge or override the content -->
                            <merge>true</merge>
                        </configuration>
                    </execution>
                    
                    <!-- Deploy the maven repository -->
                    <execution>
                        <id>deploy-maven-artifacts</id>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <!-- select the Maven phase in which the plugin will be executed -->
                        <phase>deploy</phase>
                        <configuration>
                            <!-- Plugin configuration goes here -->
                            <server>github</server>
                            
                            <message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
                            <noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
                            <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
                            <branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
                            <includes><include>**/*</include></includes>
                            <merge>true</merge>
                        </configuration>
                    </execution>
                    
                </executions>
            </plugin>
        </plugins>

        <resources>

            <!-- include plugin.yml -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>plugin.yml</include>
                </includes>
            </resource>

            <!-- exclude everything else from filtering -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>plugin.yml</exclude>
                </excludes>
            </resource>

        </resources>
    </build>

    <distributionManagement>
        
        <!--
        <repository>
            <id>local-repository</id>
            <url>${local.maven.repository}</url>
        </repository>
        -->
        
        <repository>
            <id>internal-repo</id>
            <name>Temporary Staging Repository</name>
            <url>file://${project.build.directory}/mvn-repo</url>
        </repository>
        
        <site>
            <id>github</id>
            <url>https://github.com/martijn-heil/NinCore-API</url>
        </site>
    
    </distributionManagement>

</project>